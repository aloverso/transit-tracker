{"ast":null,"code":"import _classCallCheck from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pivotal/workspace/transit-tracker/client/src/components/AddMode.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n     mutation {\\n       addMode(name: $name) {\\n         name\\n         counter\\n       }\\n     }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nvar ADD_MODE = gql(_templateObject());\n\nvar AddMode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddMode, _Component);\n\n  function AddMode() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddMode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddMode)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddMode, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"Mode of Transit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(Mutation, {\n        mutation: ADD_MODE,\n        variables: {\n          name: this.state.name\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, function (mutation) {\n        return React.createElement(\"button\", {\n          onClick: addMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Submit\");\n      }));\n    }\n  }]);\n\n  return AddMode;\n}(Component);\n\nexport default AddMode;","map":{"version":3,"sources":["/Users/pivotal/workspace/transit-tracker/client/src/components/AddMode.js"],"names":["React","Component","Mutation","gql","ADD_MODE","AddMode","state","name","e","setState","target","value","mutation","addMode"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;;IAQME,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;6BAIC;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,IADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEF,YAAAA,IAAI,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAjB,WAAd,CAAJ;AAAA,SAFb;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EASE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEP,QAApB;AAA8B,QAAA,SAAS,EAAE;AAAEG,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAAnB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACK,QAAD;AAAA,eACC;AAAQ,UAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD;AAAA,OADH,CATF,CADF;AAmBD;;;;EAzBmBZ,S;;AA4BtB,eAAeI,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst ADD_MODE = gql`\n     mutation {\n       addMode(name: $name) {\n         name\n         counter\n       }\n     }`\n\nclass AddMode extends Component {\n  state = {\n    name: '',\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input\n            value={this.state.name}\n            onChange={e => this.setState({ name: e.target.value })}\n            type=\"text\"\n            placeholder=\"Mode of Transit\"\n          />\n        </div>\n        <Mutation mutation={ADD_MODE} variables={{ name: this.state.name }}>\n          {(mutation) => (\n            <button onClick={addMode}>\n              Submit\n            </button>\n          )}\n        </Mutation>\n      </div>\n    )\n  }\n}\n\nexport default AddMode"]},"metadata":{},"sourceType":"module"}