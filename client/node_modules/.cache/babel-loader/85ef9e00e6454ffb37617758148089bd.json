{"ast":null,"code":"import _classCallCheck from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pivotal/workspace/pinelist/client/src/containers/ListContainer.js\";\nimport React, { Component } from 'react';\nimport { inject, observer } from \"mobx-react\";\n\nvar ListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContainer, _Component);\n\n  function ListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderView = function () {\n      return _this.props.appStore.viewData.map(function (station) {\n        return React.createElement(\"div\", {\n          \"data-station\": true,\n          key: station.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, station.name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.appStore.getLists();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.props.appStore.switchView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Swap view\"), this.renderView());\n    }\n  }]);\n\n  return ListContainer;\n}(Component);\n\nexport default inject(['appStore'])(observer(ListContainer));","map":{"version":3,"sources":["/Users/pivotal/workspace/pinelist/client/src/containers/ListContainer.js"],"names":["React","Component","inject","observer","ListContainer","renderView","props","appStore","viewData","map","station","id","name","getLists","switchView"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;;IAEMC,a;;;;;;;;;;;;;;;;;;UAMJC,U,GAAa,YAAM;AAEjB,aAAO,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CACL,UAAAC,OAAO;AAAA,eAAI;AAAK,8BAAL;AAAkB,UAAA,GAAG,EAAEA,OAAO,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCD,OAAO,CAACE,IAA5C,CAAJ;AAAA,OADF,CAAP;AAGD,K;;;;;;;wCATmB;AAClB,WAAKN,KAAL,CAAWC,QAAX,CAAoBM,QAApB;AACD;;;6BASQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKT,UAAL,EAFH,CADF;AAMD;;;;EApByBJ,S;;AAwB5B,eAAeC,MAAM,CAAC,CAAC,UAAD,CAAD,CAAN,CAAqBC,QAAQ,CAACC,aAAD,CAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass ListContainer extends Component {\n\n  componentDidMount() {\n    this.props.appStore.getLists()\n  }\n\n  renderView = () => {\n\n    return this.props.appStore.viewData.map(\n      station => <div data-station key={station.id}>{station.name}</div>\n    )\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.props.appStore.switchView}>Swap view</button>\n        {this.renderView()}\n      </div>\n    );\n  }\n}\n\n\nexport default inject(['appStore'])(observer(ListContainer));\n"]},"metadata":{},"sourceType":"module"}