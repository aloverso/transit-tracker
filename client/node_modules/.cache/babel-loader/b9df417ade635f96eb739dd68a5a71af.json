{"ast":null,"code":"import _classCallCheck from \"/Users/pivotal/workspace/greenline/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { action, observable, set } from \"mobx\";\nimport ApiClient from \"../clients/ApiClient\";\n\nvar AppStore = function AppStore() {\n  var _this = this;\n\n  _classCallCheck(this, AppStore);\n\n  this.stations = observable.array([{\n    name: 'test',\n    id: '1'\n  }]);\n  this.apiClient = new ApiClient();\n  this.getStations = action(function () {\n    _this.apiClient.get('http://localhost:8080/api/v1/stations').then(function (data) {\n      _this.stations = data;\n      console.log(_this.stations);\n    });\n  });\n  this.newStation = action(function () {\n    _this.stations.push({\n      name: 'New ' + Math.random(),\n      id: Math.random() * 100\n    });\n\n    console.log(_this.stations);\n  });\n};\n\nexport default AppStore;","map":{"version":3,"sources":["/Users/pivotal/workspace/greenline/client/src/stores/AppStore.js"],"names":["action","observable","set","ApiClient","AppStore","stations","array","name","id","apiClient","getStations","get","then","data","console","log","newStation","push","Math","random"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA2BC,GAA3B,QAAqC,MAArC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;IAEMC,Q;;;;;OACJC,Q,GAAWJ,UAAU,CAACK,KAAX,CAAiB,CAC1B;AACEC,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GAD0B,CAAjB,C;OAOXC,S,GAAY,IAAIN,SAAJ,E;OAEZO,W,GAAcV,MAAM,CAAC,YAAM;AACzB,IAAA,KAAI,CAACS,SAAL,CAAeE,GAAf,CAAmB,uCAAnB,EACGC,IADH,CACQ,UAACC,IAAD,EAAU;AACd,MAAA,KAAI,CAACR,QAAL,GAAgBQ,IAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACV,QAAjB;AACD,KAJH;AAKD,GANmB,C;OAQpBW,U,GAAahB,MAAM,CAAC,YAAM;AACxB,IAAA,KAAI,CAACK,QAAL,CAAcY,IAAd,CAAmB;AACjBV,MAAAA,IAAI,EAAE,SAASW,IAAI,CAACC,MAAL,EADE;AAEjBX,MAAAA,EAAE,EAAEU,IAAI,CAACC,MAAL,KAAgB;AAFH,KAAnB;;AAKAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACV,QAAjB;AACD,GAPkB,C;;;AAUrB,eAAeD,QAAf","sourcesContent":["import {action, observable,set} from \"mobx\";\nimport ApiClient from \"../clients/ApiClient\";\n\nclass AppStore {\n  stations = observable.array([\n    {\n      name: 'test',\n      id: '1',\n    }\n  ]);\n\n  apiClient = new ApiClient();\n\n  getStations = action(() => {\n    this.apiClient.get('http://localhost:8080/api/v1/stations')\n      .then((data) => {\n        this.stations = data;\n        console.log(this.stations)\n      })\n  })\n\n  newStation = action(() => {\n    this.stations.push({\n      name: 'New ' + Math.random(),\n      id: Math.random() * 100\n    })\n\n    console.log(this.stations)\n  });\n}\n\nexport default AppStore;"]},"metadata":{},"sourceType":"module"}