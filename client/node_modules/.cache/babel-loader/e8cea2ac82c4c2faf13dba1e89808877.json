{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pivotal/workspace/greenline/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pivotal/workspace/greenline/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pivotal/workspace/greenline/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { action, observable } from \"mobx/lib/mobx\";\nimport ApiClient from \"../clients/ApiClient\";\n\nvar AppStore = function AppStore() {\n  var _this = this;\n\n  _classCallCheck(this, AppStore);\n\n  this.stations = observable(function () {\n    return [];\n  });\n  this.apiClient = new ApiClient();\n  this.getUsers = action(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.apiClient.get('http://localhost:8080/api/v1/stations');\n\n          case 2:\n            _this.stations = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  })));\n};\n\nexport default AppStore;","map":{"version":3,"sources":["/Users/pivotal/workspace/greenline/client/src/stores/AppStore.js"],"names":["action","observable","ApiClient","AppStore","stations","apiClient","getUsers","get"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,QAAiC,eAAjC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;IAEMC,Q;;;;;OACJC,Q,GAAWH,UAAU,CAAC;AAAA,WAAM,EAAN;AAAA,GAAD,C;OACrBI,S,GAAY,IAAIH,SAAJ,E;OAEZI,Q,GAAWN,MAAM;AAAA;AAAA;AAAA;AAAA,2BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM,KAAI,CAACK,SAAL,CAAeE,GAAf,CAAmB,uCAAnB,CADN;;AAAA;AAChB,YAAA,KAAI,CAACH,QADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,G;;;AAKnB,eAAeD,QAAf","sourcesContent":["import {action, observable} from \"mobx/lib/mobx\";\nimport ApiClient from \"../clients/ApiClient\";\n\nclass AppStore {\n  stations = observable(() => [])\n  apiClient = new ApiClient();\n\n  getUsers = action(async () => {\n    this.stations = await this.apiClient.get('http://localhost:8080/api/v1/stations');\n  })\n}\n\nexport default AppStore;"]},"metadata":{},"sourceType":"module"}