{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pivotal/workspace/pinelist/client/src/containers/ListContainer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          {\\n              lists {\\n                  name\\n                  id\\n              }\\n          }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { buildSchema, graphql } from \"graphql\";\nimport ApolloClient, { gql } from \"apollo-boost\";\n\nvar ListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContainer, _Component);\n\n  function ListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderPineLists = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"hello\"); // this.props.appStore.viewData.map(\n      //   station => <div data-pinelist key={list.id}>{list.name}</div>\n      // )\n    };\n\n    return _this;\n  }\n\n  _createClass(ListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // const schema = buildSchema(`\n      //   type Query {\n      //     lists: [PineList]\n      //     foo: String\n      //   }\n      //\n      //   type PineList {\n      //     id: ID\n      //     name: String\n      //     year: Int\n      //   }\n      //\n      //   type Mutation {\n      //     createList(name: String!): PineList\n      //   }\n      // `);\n      //\n      // const request = ```\n      // {\n      //   lists {\n      //     name\n      //     id\n      //   }\n      // }\n      // ```;\n      //\n      // graphql(schema, request).then((response) => {\n      //   console.log(response);\n      // });\n      var client = new ApolloClient({\n        uri: \"http://localhost:8080/graphql\"\n      });\n      client.query({\n        query: gql(_templateObject())\n      }).then(function (result) {\n        return console.log(result);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderPineLists());\n    }\n  }]);\n\n  return ListContainer;\n}(Component);\n\nexport default ListContainer;","map":{"version":3,"sources":["/Users/pivotal/workspace/pinelist/client/src/containers/ListContainer.js"],"names":["React","Component","inject","observer","buildSchema","graphql","ApolloClient","gql","ListContainer","renderPineLists","client","uri","query","then","result","console","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,SAAnC;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAiC,cAAjC;;IAGMC,a;;;;;;;;;;;;;;;;;;UAqDJC,e,GAAkB,YAAM;AAEtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP,CAFsB,CAItB;AACA;AACA;AACD,K;;;;;;;wCA1DmB;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,UAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,QAAAA,GAAG,EAAE;AADyB,OAAjB,CAAf;AAIAD,MAAAA,MAAM,CACLE,KADD,CACO;AACLA,QAAAA,KAAK,EAAEL,GAAF;AADA,OADP,EAWCM,IAXD,CAWM,UAAAC,MAAM;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,OAXZ;AAYD;;;6BAWQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,eAAL,EADH,CADF;AAKD;;;;EApEyBR,S;;AAwE5B,eAAeO,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {buildSchema, graphql} from \"graphql\";\nimport ApolloClient, { gql} from \"apollo-boost\";\n\n\nclass ListContainer extends Component {\n\n  componentDidMount() {\n\n    // const schema = buildSchema(`\n    //   type Query {\n    //     lists: [PineList]\n    //     foo: String\n    //   }\n    //\n    //   type PineList {\n    //     id: ID\n    //     name: String\n    //     year: Int\n    //   }\n    //\n    //   type Mutation {\n    //     createList(name: String!): PineList\n    //   }\n    // `);\n    //\n    // const request = ```\n    // {\n    //   lists {\n    //     name\n    //     id\n    //   }\n    // }\n    // ```;\n    //\n    // graphql(schema, request).then((response) => {\n    //   console.log(response);\n    // });\n\n\n    const client = new ApolloClient({\n      uri: \"http://localhost:8080/graphql\"\n    });\n\n    client\n    .query({\n      query: gql`\n          {\n              lists {\n                  name\n                  id\n              }\n          }\n      `\n    })\n    .then(result => console.log(result));\n  }\n\n  renderPineLists = () => {\n\n    return <div>hello</div>\n\n    // this.props.appStore.viewData.map(\n    //   station => <div data-pinelist key={list.id}>{list.name}</div>\n    // )\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderPineLists()}\n      </div>\n    );\n  }\n}\n\n\nexport default ListContainer;\n"]},"metadata":{},"sourceType":"module"}