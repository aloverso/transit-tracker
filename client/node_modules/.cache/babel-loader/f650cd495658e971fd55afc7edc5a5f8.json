{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pivotal/workspace/pinelist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pivotal/workspace/pinelist/client/src/containers/ListContainer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          {\\n            lists {\\n                name\\n                id\\n            }\\n          }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { buildSchema, graphql } from \"graphql\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\n\nvar ListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContainer, _Component);\n\n  function ListContainer() {\n    _classCallCheck(this, ListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListContainer).apply(this, arguments));\n  }\n\n  _createClass(ListContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Query, {\n        query: gql(_templateObject()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Loading...\");\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Error :(\");\n        return data.lists.map(function (_ref2) {\n          var name = _ref2.name,\n              id = _ref2.id;\n          return React.createElement(\"div\", {\n            key: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, name, \": \", id));\n        });\n      });\n    }\n  }]);\n\n  return ListContainer;\n}(Component);\n\nexport default ListContainer;","map":{"version":3,"sources":["/Users/pivotal/workspace/pinelist/client/src/containers/ListContainer.js"],"names":["React","Component","inject","observer","buildSchema","graphql","ApolloClient","gql","Query","ListContainer","loading","error","data","lists","map","name","id"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,SAAnC;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAiC,cAAjC;AACA,SAAQC,KAAR,QAAoB,cAApB;;IAGMC,a;;;;;;;;;;;;;6BAEK;AACP,aACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEF,GAAF,mBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUG,gBAA8B;AAAA,YAA3BG,OAA2B,QAA3BA,OAA2B;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC7B,YAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACb,YAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAEX,eAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,cAASC,EAAT,SAASA,EAAT;AAAA,iBACpB;AAAK,YAAA,GAAG,EAAEA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAJ,QAAYC,EAAZ,CADF,CADoB;AAAA,SAAf,CAAP;AAKD,OAnBH,CADF;AAuBD;;;;EA1ByBf,S;;AA8B5B,eAAeQ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {buildSchema, graphql} from \"graphql\";\nimport ApolloClient, { gql} from \"apollo-boost\";\nimport {Query} from \"react-apollo\";\n\n\nclass ListContainer extends Component {\n\n  render() {\n    return (\n      <Query\n        query={gql`\n          {\n            lists {\n                name\n                id\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error :(</p>;\n\n          return data.lists.map(({ name, id }) => (\n            <div key={id}>\n              <p>{name}: {id}</p>\n            </div>\n          ));\n        }}\n      </Query>\n    );\n  }\n}\n\n\nexport default ListContainer;\n"]},"metadata":{},"sourceType":"module"}