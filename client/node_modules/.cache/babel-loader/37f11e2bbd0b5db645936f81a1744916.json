{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pivotal/workspace/transit-tracker/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pivotal/workspace/transit-tracker/client/src/components/TransitModeList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          {\\n              feed {\\n                  links {\\n                      id\\n                  }\\n              }\\n          }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport TransitMode from \"./TransitMode\";\n\nvar TransitModeList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransitModeList, _Component);\n\n  function TransitModeList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransitModeList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransitModeList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.modes = [{\n      name: 'asdf',\n      counter: 0\n    }];\n    return _this;\n  }\n\n  _createClass(TransitModeList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      client.query({\n        query: gql(_templateObject())\n      }).then(function (response) {\n        return console.log(response.data.allLinks);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.modes.map(function (mode) {\n        return React.createElement(TransitMode, {\n          key: mode.name,\n          mode: mode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return TransitModeList;\n}(Component);\n\nexport default TransitModeList;","map":{"version":3,"sources":["/Users/pivotal/workspace/transit-tracker/client/src/components/TransitModeList.js"],"names":["React","Component","TransitMode","TransitModeList","modes","name","counter","client","query","gql","then","response","console","log","data","allLinks","map","mode"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,e;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,C;;;;;;wCAKY;AAClBC,MAAAA,MAAM,CAACC,KAAP,CAAa;AACXA,QAAAA,KAAK,EAAEC,GAAF;AADM,OAAb,EAUGC,IAVH,CAUQ,UAAAC,QAAQ;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,QAA1B,CAAJ;AAAA,OAVhB;AAWD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKX,KAAL,CAAWY,GAAX,CAAe,UAAAC,IAAI;AAAA,eAAI,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,IAAI,CAACZ,IAAvB;AAA6B,UAAA,IAAI,EAAEY,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAnB,CADH,CADF;AAKD;;;;EA3B2BhB,S;;AA8B9B,eAAeE,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport TransitMode from \"./TransitMode\";\n\nclass TransitModeList extends Component {\n\n  modes = [{\n    name: 'asdf',\n    counter: 0\n  }]\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n          {\n              feed {\n                  links {\n                      id\n                  }\n              }\n          }\n      `\n    }).then(response => console.log(response.data.allLinks))\n  }\n\n  render() {\n    return (\n      <div>\n        {this.modes.map(mode => <TransitMode key={mode.name} mode={mode} />)}\n      </div>\n    )\n  }\n}\n\nexport default TransitModeList"]},"metadata":{},"sourceType":"module"}